TCP

#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<unistd.h>
int main(int argc ,char* argv[])
{
 int s = socket(AF_INET,SOCK_STREAM,0);
 struct sockaddr_in sadd;
 sadd.sin_family = AF_INET ;
 sadd.sin_addr.s_addr = htonl(INADDR_ANY);
 sadd.sin_port = htons(1999);

 socklen_t slen = sizeof(sadd);
 bind(s,(struct sockaddr *) &sadd,slen);
 printf("Server connected!\n");
 listen(s,1);

 struct sockaddr_in cadd;
 socklen_t clen = sizeof(cadd);
 int a = accept(s,(struct sockaddr *) &cadd,&clen);
 printf("Client connected!\n");

 while(1)
 {
  char b[1024];
  recv(a,b,sizeof(b),0);
  printf("Message : %s",b);
  break;
 }
close(s);
return 0;
}


#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<unistd.h>
int main(int argc ,char* argv[])
{
 int s = socket(AF_INET,SOCK_STREAM,0);
 struct sockaddr_in sadd;
 sadd.sin_family = AF_INET ;
 sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
 sadd.sin_port = htons(1999);
 socklen_t slen = sizeof(sadd);
 connect(s ,(struct sockaddr *) &sadd,slen);
 while(1)
 { 
  printf("Enter the message :");
  char b[1024];
  fgets(b,sizeof(b),stdin);
  send(s,b,sizeof(b),0);
  printf("Message sent!\n");
  break;
  }
close(s);
return 0;
}


--
UDP

#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<unistd.h>
int main(int argc ,char* argv[])
{
 int s = socket(AF_INET,SOCK_DGRAM,0);
 struct sockaddr_in sadd;
 sadd.sin_family = AF_INET;
 sadd.sin_addr.s_addr = htonl(INADDR_ANY);
 sadd.sin_port = htons(1999);
 socklen_t slen = sizeof(sadd);
 bind(s,(struct sockaddr*) &sadd,slen);
 printf("Server connected!\n");
 listen(s,1);
 struct sockaddr_in cadd;
 socklen_t clen = sizeof(cadd);
 printf("Client connected!\n");
 while(1)
 {
  char b[1024];
  recvfrom(s,b,sizeof(b),0,(struct sockaddr*) &cadd,&clen);
  printf("Message : %s",b);
  break;
 }
close(s);
return 0;
}


#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netdb.h>
#include<unistd.h>
int main(int argc ,char* argv[])
{
 int s = socket(AF_INET,SOCK_DGRAM,0);
 struct sockaddr_in sadd;
 sadd.sin_family = AF_INET ;
 sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
 sadd.sin_port = htons(1999);
 socklen_t slen = sizeof(sadd);
 while(1)
 { 
  printf("Enter the message :");
  char b[1024];
  fgets(b,sizeof(b),stdin);
  sendto(s,b,sizeof(b),0,(struct sockaddr*)&sadd,slen);
  printf("Message sent!\n");
  break;
  }
close(s);
return 0;
}

--
TIME


#include <stdio.h>
#include <time.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);

	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = htonl(INADDR_ANY);
	sadd.sin_port = htons(1999);
	socklen_t slen = sizeof(sadd);
	bind(s, (struct sockaddr*) &sadd, slen);
	printf("Server connected!\n");
	listen(s, 1);
	struct sockaddr_in cadd;
	socklen_t clen = sizeof(cadd);
	int a = accept(s, (struct sockaddr*) &cadd, &clen);
	printf("Client connected!\n");
	
	char b[1024];
	time_t t = time(NULL);
	snprintf(b, sizeof(b), "%s", ctime(&t));
	send(a, b, sizeof(b), 0);
	close(s);
}


#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);

	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
	sadd.sin_port = htons(1999);
	socklen_t slen = sizeof(sadd);
	connect(s, (struct sockaddr*) &sadd, slen);
	char b[1024];
	recv(s, b, sizeof(b), 0);
	printf("Time: %s", b);
	close(s);
}

--
HALF

#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);
	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = htonl(INADDR_ANY);
	sadd.sin_port = htons(1999);
	socklen_t slen = sizeof(sadd);
	bind(s, (struct sockaddr*) &sadd, slen);
	printf("Server connected!\n");
	listen(s, 1);
	struct sockaddr_in cadd;
	socklen_t clen = sizeof(cadd);
	int a = accept(s, (struct sockaddr*) &cadd, &clen);
	printf("Client connected!\n");
	while (1)
	{
		printf("Enter a message: ");
		char b1[1024];
		fgets(b1, sizeof(b1), stdin);
		send(a, b1, sizeof(b1), 0);
		printf("Message sent!\n");
		char b2[1024];
		recv(a, b2, sizeof(b2), 0);
		printf("Client: %s", b2);
	}
	close(s);
}

#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);

	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
	sadd.sin_port = htons(1999);

	socklen_t slen = sizeof(sadd);

	connect(s, (struct sockaddr*) &sadd, slen);

	while (1)
	{
		char b1[1024];
		recv(s, b1, sizeof(b1), 0);

		printf("Server: %s", b1);

		printf("Enter a message: ");

		char b2[1024];
		fgets(b2, sizeof(b2), stdin);

		send(s, b2, sizeof(b2), 0);

		printf("Message sent!\n");
	}

	close(s);
}

--
FULL

#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);
	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = htonl(INADDR_ANY);
	sadd.sin_port = htons(1999);
	socklen_t slen = sizeof(sadd);
	bind(s, (struct sockaddr*) &sadd, slen);
	printf("Server connected!\n");
	listen(s, 1);
	struct sockaddr_in cadd;
	socklen_t clen = sizeof(cadd);
	int a = accept(s, (struct sockaddr*) &cadd, &clen);
	printf("Client connected!\n");
	if (!fork())
	{
		while (1)
		{
			char b[1024];
			fgets(b, sizeof(b), stdin);
			send(a, b, sizeof(b), 0);
			printf("Server: %s", b);
		}
	}
	else
	{
		while (1)
		{
			char b[1024];
			recv(a, b, sizeof(b), 0);
			printf("Client: %s", b);
		}
	}
	close(s);
}


#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);

	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
	sadd.sin_port = htons(1999);

	socklen_t slen = sizeof(sadd);

	connect(s, (struct sockaddr*) &sadd, slen);

	if (!fork())
	{
		while (1)
		{
			char b[1024];
			fgets(b, sizeof(b), stdin);

			send(s, b, sizeof(b), 0);

			printf("Client: %s", b);
		}
	}
	else
	{
		while (1)
		{
			char b[1024];
			recv(s, b, sizeof(b), 0);

			printf("Server: %s", b);
		}
	}

	close(s);
}

--
FTP

#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);
	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = htonl(INADDR_ANY);
	sadd.sin_port = htons(1999);
	socklen_t slen = sizeof(sadd);
	bind(s, (struct sockaddr*) &sadd, slen);
	printf("Server connected!\n");
	listen(s, 1);
	struct sockaddr_in cadd;
	socklen_t clen = sizeof(cadd);
	int a = accept(s, (struct sockaddr*) &cadd, &clen);
	printf("Client connected!\n");
	while (1)
	{
		char b1[1024];
		recv(a, b1, sizeof(b1), 0);
		FILE* f = fopen(b1, "r");
		char b2[1024];
		fread(b2, sizeof(b2), 1, f);
		fclose(f);
		send(a, b2, sizeof(b2), 0);
		printf("File sent!\n");
	}
	close(s);
}


#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
	int s = socket(AF_INET, SOCK_STREAM, 0);

	struct sockaddr_in sadd;
	sadd.sin_family = AF_INET;
	sadd.sin_addr.s_addr = inet_addr("127.0.0.1");
	sadd.sin_port = htons(1999);

	socklen_t slen = sizeof(sadd);

	connect(s, (struct sockaddr*) &sadd, slen);

	while (1)
	{
		printf("Enter a file name: ");

		char b1[1024];
		scanf("%s", b1);

		send(s, b1, strlen(b1) + 1, 0);

		char b2[1024];
		recv(s, b2, sizeof(b2), 0);
		
		printf("File: %s", b2);
	}

	close(s);
}

